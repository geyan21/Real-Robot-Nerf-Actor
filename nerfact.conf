# @package _group_


language_model = CLIP
language_model_dim = 512

# Voxelization
image_crop_size = 64
bounds_offset = [0.15]
voxel_sizes = [100]
include_prev_layer = False


neural_renderer{

  # choices: odise, diffusion, dinov2

  # foundation_model_name = dinov2
  # d_embed: 768

  foundation_model_name = diffusion
  d_embed = 512

  # foundation_model_name: 'deepfloyd'
  # d_embed: 192

#   d_latent = 128
  d_latent = 64

  use_multi_scale_voxel = False
  # d_multi_scale_latent: 330
  d_multi_scale_latent = 266

  use_depth_supervision = False

  pretrain_step = 0
  pretrain_and_freeze = 0
  # weight for joint training of BC and NeRF
  lambda_nerf = 0.01


  dino_path = None
  lseg_path = None

  
  # loss weight. 
  # this has been tuned.
  lambda_embed = 0.01     # 0.01
  # weight for depth-supervised nerf based on voxel
  # lambda_depth: 0.1
  lambda_depth = 0.0
  threshold_depth_supervision = 0.8

  ray_chunk_size = 512
  d_lang = 128
  
  voxel_shape =  100
  share_mlp = True
  image_width = 128   # 80
  image_height = 128  # 60
  z_near = 1.2
  z_far = 4.0
  

  regress_coord = False
  regress_attention = False
  ret_last_feat = False
  use_code = True
  use_code_viewdirs = False
  use_freenerf = False
  use_xyz = True

  # sampling
  n_coarse = 64
  n_fine = 32
  n_fine_depth = 16
  white_bkgd = False
  lindisp = False

  # normalize_z: True
  normalize_z = False
  
  # canon_xyz: False
  canon_xyz = True
  use_viewdirs = True
  eval_batch_size = 4096
  noise_std = 0.0
  depth_std = 0.001

  mlp{
    n_blocks = 5
    d_hidden = 512
    combine_layer = 3
    combine_type = average
    beta = 0.0
    use_spade = False
    use_language = False
  }
  code{
    num_freqs = 6
    freq_factor = 1.5
    include_input = True
  }
}
  


